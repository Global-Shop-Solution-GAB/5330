Program.Sub.ScreenSU.Start
Gui.frmSalesHist..Create
Gui.frmSalesHist..Caption("Sales History")
Gui.frmSalesHist..Size(15210,9930)
Gui.frmSalesHist..MinX(15210)
Gui.frmSalesHist..MinY(9930)
Gui.frmSalesHist..Position(0,0)
Gui.frmSalesHist..BackColor(-2147483633)
Gui.frmSalesHist..MousePointer(0)
Gui.frmSalesHist..Event(UnLoad,frmSalesHist_UnLoad)
Gui.frmSalesHist.picGSS.Create(PictureBox)
Gui.frmSalesHist.picGSS.Size(4695,1305)
Gui.frmSalesHist.picGSS.Position(5550,210)
Gui.frmSalesHist.picGSS.Event(DblClick,picGSS_DblClick)
Gui.frmSalesHist.GsGCSalesHist.Create(GsGridControl)
Gui.frmSalesHist.GsGCSalesHist.Size(15075,8025)
Gui.frmSalesHist.GsGCSalesHist.Position(15,1605)
Gui.frmSalesHist.GsGCSalesHist.Event(RowCellClick,GsGCSalesHist_RowCellClick)
Gui.frmSalesHist.GsGCSalesHist.Event(ColumnFilterChanged,GsGCSalesHist_ColumnFilterChanged)
Gui.frmSalesHist.frameDates.Create(Frame)
Gui.frmSalesHist.frameDates.Size(1590,1470)
Gui.frmSalesHist.frameDates.Position(15,105)
Gui.frmSalesHist.frameDates.Caption("Date Range")
Gui.frmSalesHist.dtpStartDt.Create(DatePicker)
Gui.frmSalesHist.dtpStartDt.Size(1470,285)
Gui.frmSalesHist.dtpStartDt.Position(75,495)
Gui.frmSalesHist.dtpStartDt.Parent("frameDates")
Gui.frmSalesHist.lblStartDt.Create(Label,"Start",True,600,255,0,75,300,True,0,"Arial",8,-2147483633,0)
Gui.frmSalesHist.lblStartDt.Parent("frameDates")
Gui.frmSalesHist.lblEndDt.Create(Label,"End",True,435,255,0,75,855,True,0,"Arial",8,-2147483633,0)
Gui.frmSalesHist.lblEndDt.Parent("frameDates")
Gui.frmSalesHist.dtpEndDt.Create(DatePicker)
Gui.frmSalesHist.dtpEndDt.Size(1470,285)
Gui.frmSalesHist.dtpEndDt.Position(75,1065)
Gui.frmSalesHist.dtpEndDt.Parent("frameDates")
Gui.frmSalesHist.frameOptions.Create(Frame)
Gui.frmSalesHist.frameOptions.Size(3765,1455)
Gui.frmSalesHist.frameOptions.Position(1650,105)
Gui.frmSalesHist.frameOptions.Caption("Options")
Gui.frmSalesHist.cboCustomers.Create(ComboBox)
Gui.frmSalesHist.cboCustomers.Size(2340,330)
Gui.frmSalesHist.cboCustomers.Position(60,240)
Gui.frmSalesHist.cboCustomers.Parent("frameOptions")
Gui.frmSalesHist.cboParts.Create(ComboBox)
Gui.frmSalesHist.cboParts.Size(2340,330)
Gui.frmSalesHist.cboParts.Position(60,615)
Gui.frmSalesHist.cboParts.Parent("frameOptions")
Gui.frmSalesHist.cboPL.Create(ComboBox)
Gui.frmSalesHist.cboPL.Size(2340,330)
Gui.frmSalesHist.cboPL.Position(60,1005)
Gui.frmSalesHist.cboPL.Parent("frameOptions")
Gui.frmSalesHist.chkFreight.Create(CheckBox)
Gui.frmSalesHist.chkFreight.Size(1200,255)
Gui.frmSalesHist.chkFreight.Position(2445,465)
Gui.frmSalesHist.chkFreight.Parent("frameOptions")
Gui.frmSalesHist.chkFreight.Caption("Incl Freight")
Gui.frmSalesHist.chkFreight.Value(1)
Gui.frmSalesHist.chkProgress.Create(CheckBox)
Gui.frmSalesHist.chkProgress.Size(1290,225)
Gui.frmSalesHist.chkProgress.Position(2445,735)
Gui.frmSalesHist.chkProgress.Parent("frameOptions")
Gui.frmSalesHist.chkProgress.Caption("Incl Prog Bill")
Gui.frmSalesHist.cmdRefresh.Create(Button)
Gui.frmSalesHist.cmdRefresh.Size(975,375)
Gui.frmSalesHist.cmdRefresh.Position(2445,975)
Gui.frmSalesHist.cmdRefresh.Caption("REFRESH")
Gui.frmSalesHist.cmdRefresh.Event(Click,cmdRefresh_Click)
Gui.frmSalesHist.cmdRefresh.Parent("frameOptions")
Gui.frmSalesHist.cboCustNo.Create(ComboBox)
Gui.frmSalesHist.cboCustNo.Visible(False)
Gui.frmSalesHist.cboCustNo.Size(2340,330)
Gui.frmSalesHist.cboCustNo.Position(60,240)
Gui.frmSalesHist.cboCustNo.Parent("frameOptions")
Gui.frmSalesHist.cboCustNo.Enabled(False)
Gui.frmSalesHist.chkCustNo.Create(CheckBox)
Gui.frmSalesHist.chkCustNo.Size(1200,255)
Gui.frmSalesHist.chkCustNo.Position(2445,195)
Gui.frmSalesHist.chkCustNo.Parent("frameOptions")
Gui.frmSalesHist.chkCustNo.Caption("Cust No")
Gui.frmSalesHist.chkCustNo.Event(Click,chkCustNo_Click)
Gui.frmSalesHist.lblStatus.Create(Label,"Label",False,2955,255,0,12135,1035,True,0,"Arial",8,-2147483633,0)
Gui.frmSalesHist.pgbStatus.Create(ProgressBar)
Gui.frmSalesHist.pgbStatus.Visible(False)
Gui.frmSalesHist.pgbStatus.Size(2940,255)
Gui.frmSalesHist.pgbStatus.Position(12150,1260)
Gui.frmProfit..Create
Gui.frmProfit..Caption("Profit Pie Chart")
Gui.frmProfit..Size(11400,8370)
Gui.frmProfit..MinX(0)
Gui.frmProfit..MinY(0)
Gui.frmProfit..Position(0,0)
Gui.frmProfit..BackColor(-2147483633)
Gui.frmProfit..MousePointer(0)
Gui.frmProfit..Event(UnLoad,frmProfit_UnLoad)
Gui.frmProfit.GsChartProfit.Create(GsChart)
Gui.frmProfit.GsChartProfit.Size(11325,8070)
Gui.frmProfit.GsChartProfit.Position(0,0)
Gui.frmWeb..Create
Gui.frmWeb..Size(4035,1695)
Gui.frmWeb..MinX(0)
Gui.frmWeb..MinY(0)
Gui.frmWeb..Position(0,0)
Gui.frmWeb..BackColor(-2147483633)
Gui.frmWeb..MousePointer(0)
Gui.frmWeb..Caption("Global Shop Solutions - Web Sites")
Gui.frmWeb..Event(UnLoad,frmWeb_UnLoad)
Gui.frmWeb..MaxButton(False)
Gui.frmWeb..MinButton(False)
Gui.frmWeb..Moveable(False)
Gui.frmWeb..Sizeable(False)
Gui.frmWeb.cmdGSS.Create(Button)
Gui.frmWeb.cmdGSS.Size(3615,375)
Gui.frmWeb.cmdGSS.Position(120,45)
Gui.frmWeb.cmdGSS.Caption("Global Shop Solutions")
Gui.frmWeb.cmdGSS.Event(Click,cmdGSS_Click)
Gui.frmWeb.cmdSerV.Create(Button)
Gui.frmWeb.cmdSerV.Size(3615,375)
Gui.frmWeb.cmdSerV.Position(120,450)
Gui.frmWeb.cmdSerV.Caption("ServiceWeb")
Gui.frmWeb.cmdSerV.Event(Click,cmdServ_Click)
Gui.frmWeb.cmdUpd.Create(Button)
Gui.frmWeb.cmdUpd.Size(3615,375)
Gui.frmWeb.cmdUpd.Position(120,855)
Gui.frmWeb.cmdUpd.Caption("GSS Updates")
Gui.frmWeb.cmdUpd.Event(Click,cmdUpd_Click)
Program.Sub.ScreenSU.End

Program.Sub.Preflight.Start
	V.Global.bLoadData.Declare
	V.Global.bLongPart.Declare
Program.Sub.Preflight.End

Program.Sub.Main.Start
'Author: GaryB
'Date:   01/04/19
'Customer: AMERILUX - JOE NICK
'Modify sales order history dashboard to show the 'parent' row instead of each line, each line will be a 'subgrid'
'GCG_5330_SALES_ORDER_HISTORY.g2u 
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sIcon.Declare
	V.Local.sGssLogo.Declare
	V.Local.dStart.Declare

	F.Intrinsic.String.Build("{0}\gss2.ico",V.Caller.GasDir,V.Local.sIcon)
	F.Intrinsic.String.Build("{0}\Gab_GSS_Logo_Green_Dash.png",V.Caller.GasDir,V.Local.sGssLogo)
	Gui.frmSalesHist..Icon(V.local.sIcon)
	Gui.frmProfit..Icon(V.local.sIcon)
	Gui.frmWeb..Icon(V.local.sIcon)
	Gui.frmSalesHist.picGSS.Picture(V.Local.sGssLogo)

	'Set Start Date to First day of current month
	F.Intrinsic.Date.BeginningOfMonth(V.Ambient.Date,V.Local.dStart)
	Gui.frmSalesHist.dtpStartDt.Value(V.Local.dStart)

	F.Intrinsic.Control.CallSub(SetAnchors)
	F.Intrinsic.Control.CallSub(CheckLongPart)
	Gui.frmSalesHist..Show
	F.Intrinsic.Control.CallSub(LoadComboBoxes)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.Main.End

Program.Sub.frmSalesHist_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.End

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmSalesHist_UnLoad.End

Program.Sub.SetAnchors.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sCaption.Declare

	'0 - None
	'1 - Top
	'2 - Bottom
	'4 - Left
	'8 - Right

	Gui.frmSalesHist.frameDates.Anchor(5)
	Gui.frmSalesHist.frameOptions.Anchor(5)
	Gui.frmSalesHist.frameTotals.Anchor(10)
	Gui.frmSalesHist.picGSS.Anchor(1)
	Gui.frmSalesHist.GsGCSalesHist.Anchor(15)
	Gui.frmSalesHist.lblStatus.Anchor(9)
	Gui.frmSalesHist.pgbStatus.Anchor(9)
	Gui.frmProfit.GsChartProfit.Anchor(15)

	'Cost
	F.Intrinsic.String.Build("Cost ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	F.Intrinsic.String.Replace(V.Local.sCaption,"USD","",V.Local.sCaption)
	Gui.frmSalesHist.lblCost.Caption(V.Local.sCaption)
	'Total_Cost
	F.Intrinsic.String.Build("Total Cost ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	F.Intrinsic.String.Replace(V.Local.sCaption,"USD","",V.Local.sCaption)
	Gui.frmSalesHist.lblTotCost.Caption(V.Local.sCaption)
	'Price
	F.Intrinsic.String.Build("Price ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	F.Intrinsic.String.Replace(V.Local.sCaption,"USD","",V.Local.sCaption)
	Gui.frmSalesHist.lblPrice.Caption(V.Local.sCaption)
	'Sales
	F.Intrinsic.String.Build("Sales ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	F.Intrinsic.String.Replace(V.Local.sCaption,"USD","",V.Local.sCaption)
	Gui.frmSalesHist.lblSales.Caption(V.Local.sCaption)
	'Profit
	F.Intrinsic.String.Build("Profit ({0})",V.Company.CurrencySymbol,V.Local.sCaption)
	F.Intrinsic.String.Replace(V.Local.sCaption,"USD","",V.Local.sCaption)
	Gui.frmSalesHist.lblProfitDollar.Caption(V.Local.sCaption)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetAnchors.End

Program.Sub.CheckLongPart.Start
	F.Global.General.ReadOption("400861",0,False,"0000",V.Global.bLongPart)
	F.Intrinsic.Control.If(V.Global.bLongPart,=,False)
		F.Global.General.ReadOption("400861",0,False,"0004",V.Global.bLongPart)
	F.Intrinsic.Control.EndIf
Program.Sub.CheckLongPart.End

Program.Sub.SetContextMenus.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmSalesHist..ContextMenuCreate("ctxSalesHist")
	Gui.frmSalesHist.GsGCSalesHist.ContextMenuAttach("ctxSalesHist")
	Gui.frmSalesHist..ContextMenuAddItem("ctxSalesHist","Refresh",0,"Refresh")
	Gui.frmSalesHist..ContextMenuAddItem("ctxSalesHist","Export",0,"Export")
	Gui.frmSalesHist..ContextMenuAddItem("ctxSalesHist","ResetColumns",0,"Reset Columns")
	Gui.frmSalesHist..ContextMenuSetItemEventHandler("ctxSalesHist","Refresh","MenuClickRefresh")
	Gui.frmSalesHist..ContextMenuSetItemEventHandler("ctxSalesHist","Export","MenuClickExport")
	Gui.frmSalesHist..ContextMenuSetItemEventHandler("ctxSalesHist","ResetColumns","MenuClickResetColumns")

	Gui.frmProfit..ContextMenuCreate("ctxChart")
	Gui.frmProfit.GsChartProfit.ContextMenuAttach("ctxChart")
	Gui.frmProfit..ContextMenuAddItem("ctxChart","Export",0,"Export")
	Gui.frmProfit..ContextMenuSetItemEventHandler("ctxChart","Export","MenuClickExport")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.SetContextMenus.End

Program.Sub.MenuClickRefresh.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.CallSub(cmdRefresh_Click)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickRefresh.End

Program.Sub.MenuClickExport.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sFileExport.Declare
	V.Local.bExcel.Declare
	V.Local.bFileLocked.Declare
	V.Local.sMsg.Declare
	V.Local.sForm.Declare(String,"frmSalesHist")
	V.Local.sControl.Declare
	V.Local.bChart.Declare

	V.Local.bChart.Set(False)
	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXSALESHIST")
			V.Local.sControl.Set("GsGCSalesHist")
		F.Intrinsic.Control.Case("CTXCHART")
			V.Local.bChart.Set(True)
			V.Local.sForm.Set("frmProfit")
			V.Local.sControl.Set("GsChartProfit")
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.If(V.Local.bChart,=,False)
		F.Automation.MSExcel.CheckPresence(V.Local.bExcel)
		F.Intrinsic.Control.If(V.Local.bExcel)
			F.Intrinsic.String.Build("{0}\GCG_5330_Export.xlsx",V.Caller.LocalGssTempDir,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmSalesHist.GsGCSalesHist.Export(V.Local.sFileExport,"xlsx")
				F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
			F.Intrinsic.Control.EndIf
		F.Intrinsic.Control.Else
			F.Intrinsic.String.Build("{0}\GCG_5330_Export.csv",V.Caller.LocalGssTempDir,V.Local.sFileExport)
			F.Intrinsic.File.IsFileLocked(V.Local.sFileExport,V.Local.bFileLocked)
			F.Intrinsic.Control.If(V.Local.bFileLocked)
				F.Intrinsic.String.Build("File is already open. Please close and export again.{0}File: {1}",V.Ambient.NewLine,V.Local.sFileExport,V.Local.sMsg)
				F.Intrinsic.UI.Msgbox(V.Local.sMsg,"File In Use")
			F.Intrinsic.Control.Else
				Gui.frmSalesHist.GsGCSalesHist.Export(V.Local.sFileExport,"csv")
			F.Intrinsic.Control.EndIf
			F.Intrinsic.Task.ShellExec(0,"",V.Local.sFileExport,"","",1)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.String.Build("{0}\{1}.jpg",V.Caller.LocalGSSTempDir,V.Local.sControl,V.Local.sFileExport)
		Gui.[V.Local.sForm].[V.Local.sControl].ImageToFile("JPEG",V.Local.sFileExport)
		F.Intrinsic.Task.ShellExec(0,"Open",V.Local.sFileExport,"","",0)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickExport.End

Program.Sub.MenuClickResetColumns.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.SelectCase(V.Args.MenuName)
		F.Intrinsic.Control.Case("CTXSALESHIST")
			F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"GVSALESHIST",5330,1000,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,"")
			F.Intrinsic.Control.CallSub(LoadDtSalesHist)
	F.Intrinsic.Control.EndSelect

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.MenuClickResetColumns.End

Program.Sub.LoadComboBoxes.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmSalesHist.cmdRefresh.Enabled(False)
	Gui.frmSalesHist.lblStatus.Visible(True)
	Gui.frmSalesHist.pgbStatus.Visible(True)
	Gui.frmSalesHist.lblStatus.Caption("Loading Options....")
	Gui.frmSalesHist.pgbStatus.Min(0)
	Gui.frmSalesHist.pgbStatus.Max(100)
	Gui.frmSalesHist.pgbStatus.Value(15)

	F.ODBC.Connection!con.OpenCompanyConnection(300)

	'Customers
	F.Data.DataTable.CreateFromSQL("dtCust","con","Select ' All Customers' As Customer Union Select RTrim(Name_Customer) As Customer From Customer_Master Where Rec = '1';",True)
	Gui.frmSalesHist.cboCustomers.AddItems("DataTable","dtCust","CUSTOMER","CUSTOMER")
	Gui.frmSalesHist.cboCustomers.Text(" All Customers")
	Gui.frmSalesHist.pgbStatus.Value(30)
	'Customers Number
	F.Data.DataTable.CreateFromSQL("dtCustNo","con","Select ' All Customers' As Customer Union Select RTrim(Customer) From Customer_Master Where Rec = '1';",True)
	Gui.frmSalesHist.cboCustNo.AddItems("DataTable","dtCustNo","CUSTOMER","CUSTOMER")
	Gui.frmSalesHist.cboCustNo.Text(" All Customers")
	Gui.frmSalesHist.pgbStatus.Value(45)
	'Parts
	F.Data.DataTable.CreateFromSQL("dtPart","con","Select ' All Parts' As Part Union Select RTrim(Part) As Part From Inventory_Mstr;",True)
	Gui.frmSalesHist.cboParts.AddItems("DataTable","dtPart","PART","PART")
	Gui.frmSalesHist.cboParts.Text(" All Parts")
	Gui.frmSalesHist.pgbStatus.Value(60)
	'Product Lines (PL)
	F.Data.DataTable.CreateFromSQL("dtPL","con","Select ' All Product Lines' As PL Union Select RTrim(Product_Line) As Product_Line From Product_Line Where Key_Data = 'ORDPRDLN' And Product_Line <> '';",True)
	Gui.frmSalesHist.cboPL.AddItems("DataTable","dtPL","PL","PL")
	Gui.frmSalesHist.cboPL.Text(" All Product Lines")
	Gui.frmSalesHist.pgbStatus.Value(90)

	F.ODBC.Connection!con.Close

	Gui.frmSalesHist.pgbStatus.Value(100)
	Gui.frmSalesHist.cmdRefresh.Enabled(True)
	Gui.frmSalesHist.lblStatus.Visible(False)
	Gui.frmSalesHist.pgbStatus.Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadComboBoxes.End

Program.Sub.chkCustNo_Click.Start
	F.Intrinsic.Control.If(V.Screen.frmSalesHist!chkCustNo.Value,=,0)
		Gui.frmSalesHist.cboCustNo.Enabled(False)
		Gui.frmSalesHist.cboCustNo.Visible(False)
		Gui.frmSalesHist.cboCustomers.Visible(True)
		Gui.frmSalesHist.cboCustomers.Enabled(True)
	F.Intrinsic.Control.Else
		Gui.frmSalesHist.cboCustNo.Enabled(True)
		Gui.frmSalesHist.cboCustNo.Visible(True)
		Gui.frmSalesHist.cboCustomers.Visible(False)
		Gui.frmSalesHist.cboCustomers.Enabled(False)
	F.Intrinsic.Control.EndIf
Program.Sub.chkCustNo_Click.End

Program.Sub.cmdRefresh_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Control.If(V.Global.bLoadData)
		F.Intrinsic.Control.CallSub(Serialize)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.CallSub(LoadDtSalesHist)
	F.Intrinsic.Control.CallSub(Deserialize)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdRefresh_Click.End

Program.Sub.LoadDtSalesHist.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSQL.Declare
	V.Local.dStart.Declare
	V.Local.dEnd.Declare
	V.Local.sCustomer.Declare
	V.Local.sPart.Declare
	V.Local.sPL.Declare
	V.Local.sFilter.Declare
	v.Local.fReturn.Declare
	v.Local.iRow.Declare
	v.Local.iRow2.Declare
	v.Local.sInvOrdKey.Declare
	v.Local.fTempMatl.Declare
	v.Local.fTempLabor.Declare
	v.Local.fTempOuts.Declare
	v.Local.fTempOvhd.Declare
	v.Local.fTempFrgt.Declare
	v.Local.fTempOth.Declare
	v.Local.bFound.Declare

	Gui.frmSalesHist.cmdRefresh.Enabled(False)
	Gui.frmSalesHist.lblStatus.Visible(True)
	Gui.frmSalesHist.pgbStatus.Visible(True)
	Gui.frmSalesHist.lblStatus.Caption("Loading Sales History Data....")
	Gui.frmSalesHist.pgbStatus.Min(0)
	Gui.frmSalesHist.pgbStatus.Max(100)
	Gui.frmSalesHist.pgbStatus.Value(15)

	V.Local.dStart.Set(V.Screen.frmSalesHist!dtpStartDt.Value)
	V.Local.dEnd.Set(V.Screen.frmSalesHist!dtpEndDt.Value)

	F.ODBC.Connection!con.OpenCompanyConnection(300)

	F.Intrinsic.Control.If(V.DataTable.dtSalesHist.Exists)
		F.Data.DataTable.Close("dtSalesHist")
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.If(V.Global.bLoadData,=,False)
		F.Intrinsic.Control.CallSub(SetContextMenus)
	F.Intrinsic.Control.EndIf

	V.Global.bLoadData.Set(True)
	
'specific customers	
	F.Intrinsic.Control.If(V.Screen.frmSalesHist!chkCustNo.Value,=,0)
		F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboCustomers.Value,<>," All Customers")
			V.Local.sCustomer.Set(V.Screen.frmSalesHist!cboCustomers.Value)
			F.Intrinsic.String.Build("and A.Name_Customer_Ship = '{0}'",V.Local.sCustomer.Trim,V.Local.sFilter)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboCustNo.Value,<>," All Customers")
			V.Local.sCustomer.Set(V.Screen.frmSalesHist!cboCustNo.Value)
			F.Intrinsic.String.Build("and A.Customer = '{0}'",V.Local.sCustomer.Trim,V.Local.sFilter)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf

		
'	F.Intrinsic.String.Build("Select Coalesce(A.Part,'') AS Part,'' As Display_Part,A.Location,A.Product_Line,A.Description,A.Customer,A.Name_Cust_Ship,A.Customer_Ship,A.Area
',A.Invoice,A.Order_No,A.Order_Line,RTrim(A.Customer_PO) As Customer_PO,A.Date_Invoice,Cast(A.Qty_Shipped As Float) As Qty_Shipped,Cast(A.Cost As Float) As Cost,
'Cast(A.Qty_Shipped*A.Cost As Float) As Total_Cost,Cast(A.Price_Discount_Order As Float) As Price,Cast(A.Extension_Order As Float) As Sales,
'Cast(A.Extension_Order - (A.Qty_Shipped*A.Cost) As Float) As Profit,Cast(A.Margin/100 As Float) As Margin,A.Tax_State,A.Tax_1,'' As Descr,
'Case When A.Flag_Tax_Status = 'E' Then 'Exempt' Else 'Taxable' End As TaxStatus,A.Extension_Order As TaxAmount,
'A.Tax_Rate_1,Case When A.Flag_Tax_Status = 'E' Then 0.0 Else A.Tax_Rate_1 * A.Extension_Order End As Tax,A.SalesPerson,A.Branch,A.Line_Type,RTrim(A.Ship_Via) As Ship_Via,'' As TrackingNo,Cast(0 As Float) As Matl,Cast(0 As Float) As Labor,Cast(0 As Float) As Ovhd,Cast(0 As Float) As Outs,Cast(0 As Float) As Frgt,Cast(0 As Float) As Oth,A.Invoice+A.Order_No+A.Order_Suffix+A.Order_Line As SalesKey,A.Tax_State+A.Tax_1 As TaxKey From V_Order_Hist_Line A Where A.Date_Invoice Between '{0}' And '{1}';",V.Local.dStart.PervasiveDate,V.Local.dEnd.PervasiveDate,V.Local.sSQL)


f.Intrinsic.String.Build("Select a.Customer,a.Name_Customer,a.Name_Customer_Ship,a.Invoice,a.Order_No,A.ORDER_SUFFIX,(a.Customer_PO) As Customer_PO,a.Date_Invoice,a.SalesMan,a.Branch,(a.Ship_Via) As Ship_Via,a.Invoice + a.Order_No + a.Order_Suffix As SalesKey,a.CARRIER_CD + Cast(a.SRVC_TYPE As Char(3)) As CSRV,Cast(0 as Float) As Sales,Cast(0 as Float) As Qty_Shipped,Cast(0 as Float) As Cost,Cast(0 as Float) as Total_Cost,Cast(0 as Float) As Price,Cast(0 As Float) As Profit,Cast(0 as Float) As Margin,'' as TAXKEY,'' as DESCR,Cast(0 As Float) As Matl,Cast(0 As Float) As Labor,Cast(0 As Float) As Ovhd,Cast(0 As Float) As Outs,Cast(0 As Float) As Frgt,Cast(0 As Float) As Oth,'' as TrackingNo,'' as Tax_1,'' as Tax_State,'' as TaxStatus,'' as Tax_Rate_1,'' as Tax,Cast(0 as Float) as TaxAmount,a.Invoice + a.Order_No as InvOrdKey from v_order_hist_head a Where a.Date_Invoice Between '{0}' And '{1}' and a.Order_No <> '0000000' {2} group by a.customer,a.name_customer,a.Name_Customer_Ship,a.Area,a.Invoice,a.Order_No,a.Customer_PO,a.Date_Invoice,a.SalesMan,a.Branch,a.Ship_Via,a.Order_Suffix,a.carrier_cd,a.srvc_type;",V.Local.dStart.PervasiveDate,V.Local.dEnd.PervasiveDate,V.Local.sFilter,V.Local.sSQL)


    F.Data.DataTable.CreateFromSQL("dtSalesHist1","con",V.Local.sSQL,True)
    f.Data.DataView.Create("dtSalesHist1","dvSalesHist1",22)


'f.Data.DataTable.AddDisplayPartColumn("dtSalesHist1",0,"Part","Display_Part")

	Gui.frmSalesHist.pgbStatus.Value(15)
'Function.Intrinsic.Debug.InvokeDebugger
'Function.Intrinsic.Debug.Stop

	
'	F.Intrinsic.Control.If(V.Screen.frmSalesHist!chkCustNo.Value,=,0)
'		F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboCustomers.Value,<>," All Customers")
'			V.Local.sCustomer.Set(V.Screen.frmSalesHist!cboCustomers.Value)
'			F.Intrinsic.String.Build("Name_Cust_Ship = '{0}'",V.Local.sCustomer.Trim,V.Local.sFilter)
'		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.Else
'		F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboCustNo.Value,<>," All Customers")
'			V.Local.sCustomer.Set(V.Screen.frmSalesHist!cboCustNo.Value)
'			F.Intrinsic.String.Build("Customer = '{0}'",V.Local.sCustomer.Trim,V.Local.sFilter)
'		F.Intrinsic.Control.EndIf
'	F.Intrinsic.Control.EndIf
'	'Specific Part
'	F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboParts.Value,<>," All Parts")
'		V.Local.sPart.Set(V.Screen.frmSalesHist!cboParts.Value)
'		F.Intrinsic.String.Build("{0} And Part = '{1}'",V.Local.sFilter,V.Local.sPart.Trim,V.Local.sFilter)
'	F.Intrinsic.Control.EndIf
'	'Specific PLs
'	F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboPL.Value,<>," All Product Lines")
'		V.Local.sPL.Set(V.Screen.frmSalesHist!cboParts.Value)
'		F.Intrinsic.String.Build("{0} And Product_Line = '{1}'",V.Local.sFilter,V.Local.sPL.Trim,V.Local.sFilter)
'	F.Intrinsic.Control.EndIf
	'Create DataView
	F.Data.DataView.Create("dtSalesHist1","dvSalesHist",22,"","")
	F.Data.DataView.ToDataTable("dtSalesHist1","dvSalesHist","dtSalesHist",True)
	F.Data.DataTable.Close("dtSalesHist1")
	Gui.frmSalesHist.pgbStatus.Value(20)
'		Function.Intrinsic.Debug.Stop

'   	'Freight & Progress Bill Lines
'	F.Intrinsic.Control.If(V.Screen.frmSalesHist!chkFreight.Value,=,1)
'	F.Intrinsic.Control.AndIf(V.Screen.frmSalesHist!chkProgress.Value,=,1)
'		V.Local.sFilter.Set("Line_Type In ('S','F','P','D')")
'	F.Intrinsic.Control.ElseIf(V.Screen.frmSalesHist!chkFreight.Value,=,1)
'		V.Local.sFilter.Set("Line_Type In ('S','F','D')")
'	F.Intrinsic.Control.ElseIf(V.Screen.frmSalesHist!chkProgress.Value,=,1)
'		V.Local.sFilter.Set("Line_Type In ('S','P','D')")
'	F.Intrinsic.Control.Else
'   	V.Local.sFilter.Set("Line_Type In ('S','D')")	
'   F.Intrinsic.Control.EndIf


'Cast(Cost As Float) As Cost,Cast(Qty_Shipped*Cost As Float) As Total_Cost
'	F.Intrinsic.String.Build("Select Coalesce(Part,'') AS Part,'' As Display_Part,Location,Product_Line,Description,Customer,Name_Cust_Ship,Customer_Ship,Area,Invoice,Order_No,Order_Line,Order_Suffix,UM,RTrim(Customer_PO) As Customer_PO,Date_Invoice,Cast(Qty_Shipped As Float) As Qty_Shipped,Cast(Cost as Float) As Cost,Cast(Price_Discount_Order As Float) As Price,Cast(Extension_Order As Float) As Sales,Case When LINE_TYPE = 'D' AND UM = 'SF' Then Cast(Extension_Order as Float) Else Cast(Extension_Order - (Qty_Shipped*Cost) As Float) End As Profit,Cast(Margin/100 As Float) As Margin,'' As Descr,Case When Flag_Tax_Status = 'E' Then 'Exempt' Else 'Taxable' End As TaxStatus,Extension_Order As TaxAmount,Tax_Rate_1,Case When Flag_Tax_Status = 'E' Then 0.0 Else Tax_Rate_1 * Extension_Order End As Tax,Branch,Line_Type,RTrim(Ship_Via) As Ship_Via,'' As TrackingNo,Case When Line_Type = 'D' Then Cast(Cost_Material as Float) Else  Cast(0 As Float) End As Matl_D,Case When Line_Type = 'D' Then Cast(Cost_Labor as Float) Else Cast(0 As Float) End As Labor_D,Case When Line_Type = 'D' Then Cast(Cost_Overhead as Float) Else Cast(0 As Float) End As Ovhd_D,Case When Line_Type = 'D' Then Cast(Cost_Outside as Float) Else Cast(0 As Float) End As Outs_D,Case When Line_Type = 'D' Then Cast(Cogs_Frt_Cost as Float) Else Cast(0 As Float) End As Frgt_D,Case When Line_Type = 'D' Then Cast(Cost_Other as Float) Else Cast(0 As Float) End As Oth_D,Invoice+Order_No+Order_Suffix+Order_Line As SalesKey,Tax_State+Tax_1 As TaxKey,'' as Job,'' as Status,Order_No+Order_line as ORDERLINE,Invoice + Order_No as InvOrdKey,Tax_1 From V_Order_Hist_Line  Where Date_Invoice Between '{0}' And '{1}' and Order_No <> '0000000' and {2};",V.Local.dStart.PervasiveDate,V.Local.dEnd.PervasiveDate,v.Local.sFilter,V.Local.sSQL)	

'Freight & Progress Bill Lines
	F.Intrinsic.Control.If(V.Screen.frmSalesHist!chkFreight.Value,=,1)
	F.Intrinsic.Control.AndIf(V.Screen.frmSalesHist!chkProgress.Value,=,1)
		V.Local.sFilter.Set("Line_Type In ('S','F','P','D')")
	F.Intrinsic.Control.ElseIf(V.Screen.frmSalesHist!chkFreight.Value,=,1)
		V.Local.sFilter.Set("Line_Type In ('S','F','D')")
	F.Intrinsic.Control.ElseIf(V.Screen.frmSalesHist!chkProgress.Value,=,1)
		V.Local.sFilter.Set("Line_Type In ('S','P','D')")
	F.Intrinsic.Control.Else
   	V.Local.sFilter.Set("Line_Type In ('S','D')")	
   F.Intrinsic.Control.EndIf
'Specific Customer
	
	F.Intrinsic.Control.If(V.Screen.frmSalesHist!chkCustNo.Value,=,0)
		F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboCustomers.Value,<>," All Customers")
			V.Local.sCustomer.Set(V.Screen.frmSalesHist!cboCustomers.Value)
			F.Intrinsic.String.Build("{0} And Name_Cust_Ship = '{1}'",V.Local.sFilter,V.Local.sCustomer.Trim,V.Local.sFilter)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.Else
		F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboCustNo.Value,<>," All Customers")
			V.Local.sCustomer.Set(V.Screen.frmSalesHist!cboCustNo.Value)
			F.Intrinsic.String.Build("{0} And Customer = '{1}'",V.Local.sFilter,V.Local.sCustomer.Trim,V.Local.sFilter)
		F.Intrinsic.Control.EndIf
	F.Intrinsic.Control.EndIf
'Specific Part
	F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboParts.Value,<>," All Parts")
		V.Local.sPart.Set(V.Screen.frmSalesHist!cboParts.Value)
		F.Intrinsic.String.Build("{0} And Part = '{1}'",V.Local.sFilter,V.Local.sPart.Trim,V.Local.sFilter)
	F.Intrinsic.Control.EndIf
'Specific PLs
	F.Intrinsic.Control.If(V.Screen.frmSalesHist!cboPL.Value,<>," All Product Lines")
		V.Local.sPL.Set(V.Screen.frmSalesHist!cboParts.Value)
		F.Intrinsic.String.Build("{0} And Product_Line = '{1}'",V.Local.sFilter,V.Local.sPL.Trim,V.Local.sFilter)
	F.Intrinsic.Control.EndIf
'(Extension_Order - (Qty_Shipped*Cost) As Float) End As Profit,Cast(Margin/100 As Float) As Margin,'' As Descr,Case When Flag_Tax_Status = 'E' 
'when product_line is 'CS' the profit is  0
	F.Intrinsic.String.Build("Select Coalesce(Part,'') AS Part,'' As Display_Part,Location,Product_Line,Description,Customer,Name_Cust_Ship,Customer_Ship,Area,Invoice,Order_No,Order_Line,Order_Suffix,UM,RTrim(Customer_PO) As Customer_PO,Date_Invoice,Cast(Qty_Shipped As Float) As Qty_Shipped,Cast(Cost as Float) As Cost,Cast(Price_Discount_Order As Float) As Price,Cast(Extension_Order As Float) As Sales,Case When LINE_TYPE = 'D' AND UM = 'SF' Then Cast(Extension_Order as Float) When Product_Line = 'CS' Then Cast(0 as Float) Else Cast(Extension_Order - (Qty_Shipped*Cost) As Float) End As Profit,'' As Descr,Case When Flag_Tax_Status = 'E' Then 'Exempt' Else 'Taxable' End As TaxStatus,Extension_Order As TaxAmount,Tax_Rate_1,Case When Flag_Tax_Status = 'E' Then 0.0 Else Tax_Rate_1 * Extension_Order End As Tax,Branch,Line_Type,RTrim(Ship_Via) As Ship_Via,'' As TrackingNo,Cast(Cost_Material as Float) As Matl_D,Cast(Cost_Labor as Float) As Labor_D,Cast(Cost_Overhead as Float) as Ovhd_D,Cast(Cost_Outside as Float) As Outs_D,Cast(Cogs_Frt_Cost as Float) As Frgt_D,Cast(Cost_Other as Float) As Oth_D,Invoice+Order_No+Order_Suffix+Order_Line As SalesKey,Tax_State+Tax_1 As TaxKey,'' as Job,'' as Status,Order_No+Order_line as ORDERLINE,Invoice + Order_No as InvOrdKey,Tax_1 From V_Order_Hist_Line  Where Date_Invoice Between '{0}' And '{1}' and Order_No <> '0000000' and {2};",V.Local.dStart.PervasiveDate,V.Local.dEnd.PervasiveDate,v.Local.sFilter,V.Local.sSQL)	

    F.Data.DataTable.CreateFromSQL("dtSalesHist$dtSalesHistLine","con",V.Local.sSQL,True)    
    f.Data.DataView.Create("dtSalesHist$dtSalesHistLine","dvSalesHistLine",22)
    f.Data.DataView.Create("dtSalesHist$dtSalesHistLine","dvTaxInfo",22,"[ORDER_LINE] = '0010'","" )
 
    'Create Relationship
	  f.Data.DataTable.AddRelation("dtSalesHist","INVOICE","dtSalesHist$dtSalesHistLine","INVOICE")		  

'populate the TAXKEY from the lines table to the header table
   f.Data.Dictionary.CreateFromDataView("ddTaxKey","dtSalesHist$dtSalesHistLine","dvSalesHistLine","InvordKey","Taxkey")
   f.Data.Dictionary.SetDefaultReturn("ddTaxKey","")
   f.Data.DataTable.FillFromDictionary("dtSalesHist","ddTaxKey","InvordKey","TaxKey")
   f.Data.Dictionary.Close("ddTaxKey")
'now populate the tax description to the header table
	'Tax Description
	F.Data.Dictionary.CreateFromSQL("dTaxDesc","con","Select Zone+Auth as TaxKey,Descr from V_AR_Tax_Tables;")
	F.Data.Dictionary.SetDefaultReturn("dTaxDesc","")
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dTaxDesc","TaxKey","Descr")
	F.Data.Dictionary.Close("dTaxDesc")
	Gui.frmSalesHist.pgbStatus.Value(25)
'populate taxstatus information from lines to header
   f.Data.Dictionary.CreateFromDataView("ddTaxInfo","dtSalesHist$dtSalesHistLine","dvTaxInfo","InvOrdKey","TaxStatus")
   f.Data.Dictionary.SetDefaultReturn("ddTaxInfo","")
   f.Data.DataTable.FillFromDictionary("dtSalesHist","ddTaxInfo","InvOrdKey","TaxStatus")
   f.Data.Dictionary.Close("ddTaxInfo")
'populate tax information from lines to header
   f.Data.Dictionary.CreateFromDataView("ddTax","dtSalesHist$dtSalesHistLine","dvTaxInfo","InvOrdKey","Tax")
   f.Data.Dictionary.SetDefaultReturn("ddTax","")
   f.Data.DataTable.FillFromDictionary("dtSalesHist","ddTax","InvOrdKey","Tax")
   f.Data.Dictionary.Close("ddTax")
'populate tax_rate_1 information from lines to header
   f.Data.Dictionary.CreateFromDataView("ddTaxRate","dtSalesHist$dtSalesHistLine","dvTaxInfo","InvOrdKey","Tax_Rate_1")
   f.Data.Dictionary.SetDefaultReturn("ddTaxRate","")
   f.Data.DataTable.FillFromDictionary("dtSalesHist","ddTaxRate","InvOrdKey","Tax_Rate_1") 
   f.Data.Dictionary.Close("ddTaxRate")

f.Data.DataTable.AddColumn("dtSalesHist$dtSalesHistLine","Matl_L","Float")
f.Data.DataTable.AddColumn("dtSalesHist$dtSalesHistLine","Labor_L","Float")
f.Data.DataTable.AddColumn("dtSalesHist$dtSalesHistLine","Ovhd_L","Float")
f.Data.DataTable.AddColumn("dtSalesHist$dtSalesHistLine","Outs_L","Float")
f.Data.DataTable.AddColumn("dtSalesHist$dtSalesHistLine","Frgt_L","Float")
f.Data.DataTable.AddColumn("dtSalesHist$dtSalesHistLine","Oth_L","Float")

'Cost Elements from OE_Sys_Cost_Elem - for regular line types - drop ships are using the order_hist_line table
	F.Data.DataTable.CreateFromSQL("dtCostElem","con","Select Invoice+Order_No+Seq+Line As SalesKey,Cost,Matl as Matl_L,Labor as Labor_L,Ovhd as Ovhd_L,Outs as Outs_L,Frgt as Frgt_L,Oth as Oth_L,Part,Locn from V_OE_Sys_Cost_Elem;",True)
	'Cost
'	F.Data.Dictionary.CreateFromDataTable("dCost","dtCostElem","SalesKey","Cost")
'	F.Data.Dictionary.SetDefaultReturn("dCost",0)
'	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dCost","SalesKey","Cost")
'	F.Data.Dictionary.Close("dCost")
	Gui.frmSalesHist.pgbStatus.Value(30)
	'Matl
	F.Data.Dictionary.CreateFromDataTable("dMatl","dtCostElem","SalesKey","Matl_L")
	F.Data.Dictionary.SetDefaultReturn("dMatl",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dMatl","SalesKey","Matl_L")
	F.Data.Dictionary.Close("dMatl")
	Gui.frmSalesHist.pgbStatus.Value(35)
	'Labor
	F.Data.Dictionary.CreateFromDataTable("dLabor","dtCostElem","SalesKey","Labor_L")
	F.Data.Dictionary.SetDefaultReturn("dLabor",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dLabor","SalesKey","Labor_L")
	F.Data.Dictionary.Close("dLabor")
	Gui.frmSalesHist.pgbStatus.Value(40)
	'Ovhd
	F.Data.Dictionary.CreateFromDataTable("dOvhd","dtCostElem","SalesKey","Ovhd_L")
	F.Data.Dictionary.SetDefaultReturn("dOvhd",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dOvhd","SalesKey","Ovhd_L")
	F.Data.Dictionary.Close("dOvhd")
	Gui.frmSalesHist.pgbStatus.Value(45)
	'Outs
	F.Data.Dictionary.CreateFromDataTable("dOuts","dtCostElem","SalesKey","Outs_L")
	F.Data.Dictionary.SetDefaultReturn("dOuts",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dOuts","SalesKey","Outs_L")
	F.Data.Dictionary.Close("dOuts")
	Gui.frmSalesHist.pgbStatus.Value(50)
	'Frgt
	F.Data.Dictionary.CreateFromDataTable("dFrgt","dtCostElem","SalesKey","Frgt_L")
	F.Data.Dictionary.SetDefaultReturn("dFrgt",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dFrgt","SalesKey","Frgt_L")
	F.Data.Dictionary.Close("dFrgt")
	Gui.frmSalesHist.pgbStatus.Value(55)
	'Oth
	F.Data.Dictionary.CreateFromDataTable("dOth","dtCostElem","SalesKey","Oth_L")
	F.Data.Dictionary.SetDefaultReturn("dOth",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dOth","SalesKey","Oth_L")
	F.Data.Dictionary.Close("dOth")
	F.Data.DataTable.Close("dtCostElem")
	Gui.frmSalesHist.pgbStatus.Value(60)
	'TrackingNo from Order_Hist_Head
	F.Data.Dictionary.CreateFromSQL("dTrackNo","con","Select Order_No,RTrim(Tracking_No) From Order_Hist_Head Order By 1;")
	F.Data.Dictionary.SetDefaultReturn("dTrackNo","")
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dTrackNo","Order_No","TrackingNo")
	F.Data.Dictionary.Close("dTrackNo")
	Gui.frmSalesHist.pgbStatus.Value(65)
	
'need to add an expression column for the total_cost field to the lines table   
'they also added rule that if product_line = 'CS' then the totalCost = Sales
'they also added a rule that if product_line = 'LA' then treat total_cost as normal
'they have a rule that is a line is a drop(D) and the unit of measure is SF then total_cost for this line is 0 else compute it
    f.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Total_Cost","Float","IIF(Line_Type = 'D' and UM = 'SF' and Product_Line <> 'LA',0,IIf(Product_Line='CS',[Sales],[Qty_Shipped]*[Cost]))")
    F.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Matl","Float","Iif (Line_Type = 'S',Matl_L,Matl_D)")
    F.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Labor","Float","Iif (Line_Type = 'S',Labor_L,Labor_D)")
    F.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Ovhd","Float","Iif (Line_Type = 'S',Ovhd_L,Ovhd_D)")
    F.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Outs","Float","Iif (Line_Type = 'S',Outs_L,Outs_D)")
    F.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Frgt","Float","Iif (Line_Type = 'S',Frgt_L,Frgt_D)")
    F.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Oth","Float","Iif (Line_Type = 'S',Oth_L,Oth_D)")
    
    f.Data.DataTable.AddExpressionColumn("dtSalesHist$dtSalesHistLine","Margin","Float","IIF(Sales = 0, 0,[Profit]/[Sales])")

'carrier account info
'    f.Data.Dictionary.CreateFromSQL("dtCSRV","con","Select Carrier_CD+Cast(Srvc_Type As Char(3)) As CSRV from OE_Carrier; ")
	F.Data.DataTable.AddColumn("dtSalesHist","CARR_SHORT_DESC","STRING")
	F.Data.DataTable.AddColumn("dtSalesHist","CARR_LONG_DESC","STRING")
    F.Data.DataTable.CreateFromSQL("dtCarrDesc","con","Select Carrier_CD+Cast(Srvc_Type As Char(3)) As CSRV,RTrim(Short_Desc) As Short_Desc,RTrim(Long_Desc) As Long_Desc From OE_Carrier;")
	F.Data.Dictionary.CreateFromDataTable("dShortDesc","dtCarrDesc","CSRV","Short_Desc")
	F.Data.Dictionary.CreateFromDataTable("dLongDesc","dtCarrDesc","CSRV","Long_Desc")
	F.Data.Dictionary.SetDefaultReturn("dShortDesc","")
	F.Data.Dictionary.SetDefaultReturn("dLongDesc","")
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dShortDesc","CSRV","CARR_SHORT_DESC")
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dLongDesc","CSRV","CARR_LONG_DESC")
	F.Data.Dictionary.Close("dShortDesc")
	F.Data.Dictionary.Close("dLongDesc")
	F.Data.DataTable.Close("dtCarrDesc")	
'	Function.Intrinsic.Debug.Stop
'alpha sort column from v_customer_sales table
    f.Data.DataTable.AddColumn("dtSalesHist","AlphaSort","STRING")
    F.Data.Dictionary.CreateFromSQL("ddAlphaSort","con","SELECT CUSTOMER,ALPHA_SORT FROM V_CUSTOMER_SALES WHERE REC = '2'")
    F.Data.Dictionary.SetDefaultReturn("ddAlphaSort","")
    F.Data.DataTable.FillFromDictionary("dtSalesHist","ddAlphaSort","CUSTOMER","AlphaSort")
    f.Data.Dictionary.Close("ddAlphaSort")
'need to check order_to_wo table and get the work orders and suffix from it	
 '   f.Data.DataTable.AddExpressionColumn("dtSalesHist","OrderLine","String","Order_No+Order_Line")
	F.Data.Dictionary.CreateFromSQL("dJob","con","Select order_no+order_LIne,job from v_order_to_wo ;")
	F.Data.Dictionary.SetDefaultReturn("dJob","")
	F.Data.DataTable.FillFromDictionary("dtSalesHist$dtSalesHistLine","dJob","ORDERLINE","Job")
	F.Data.Dictionary.Close("dJOB")
'	Function.Intrinsic.Debug.Stop
	
'need to sum up cost elem lines table make a dictionary and add it to header table
    f.Data.DataTable.CreateFromSQL("dtTotals","con","Select Invoice+Order_no as InvOrdKey,Sum(Matl) as Matl_S,Sum(Labor) as Labor_S,Sum(Ovhd) as Ovhd_S,Sum(Outs) as Outs_S,Sum(Frgt) as Frgt_S,Sum(Oth) as Oth_S from V_OE_Sys_Cost_Elem group by InvOrdKey",TRUE)
    f.Data.DataTable.AddColumn("dtTotals","Matl_D","Float")
    f.Data.DataTable.AddColumn("dtTotals","Labor_D","Float")
    f.Data.DataTable.AddColumn("dtTotals","Ovhd_D","Float")
    f.Data.DataTable.AddColumn("dtTotals","Outs_D","Float")
    f.Data.DataTable.AddColumn("dtTotals","Frgt_D","Float")
    f.Data.DataTable.AddColumn("dtTotals","Oth_D","Float")
    f.Data.DataTable.AddExpressionColumn("dtTotals","Matl","Float","Matl_S+Matl_D")
    f.Data.DataTable.AddExpressionColumn("dtTotals","Labor","Float","Labor_S+Labor_D")
    f.Data.DataTable.AddExpressionColumn("dtTotals","Ovhd","Float","Ovhd_S+Ovhd_D")
    f.Data.DataTable.AddExpressionColumn("dtTotals","Outs","Float","Outs_S+Outs_D")
    f.Data.DataTable.AddExpressionColumn("dtTotals","Frgt","Float","Frgt_S+Frgt_D")
    f.Data.DataTable.AddExpressionColumn("dtTotals","Oth","Float","Oth_S+Oth_D")
    
'need to sum up the drop lines and freight lines    
    f.Data.DataTable.CreateFromSQL("dtTotalsL","con","Select Invoice+Order_no as InvOrdKey,Sum(Cost_Material) as Matl_D,Sum(Cost_Labor) as Labor_D,Sum(Cost_Overhead) as Ovhd_D,Sum(Cost_Outside) as Outs_D,Sum(Cogs_Frt_Cost) as Frgt_D,Sum(Cost_Other) as Oth_D from V_ORDER_HIST_LINE where line_type <> 'S' group by InvOrdKey",TRUE)
    
    f.Data.DataTable.AddColumn("dtTotalsL","Key2","String")
'take top table and create a dictionary, add the keys to second table, if the record isn't found
'in second table then the key will be 'xxx' and we need to add this row to the top table
'not sure this should happen but just in case
    f.Data.Dictionary.CreatefromDataTable("ddInvOrdKey","dtTotals","InvOrdKey","InvOrdKey")
    f.Data.Dictionary.SetDefaultReturn("ddInvOrdKey","xxx")
    f.Data.DataTable.FillFromDictionary("dtTotalsL","ddInvOrdKey","InvordKey","Key2")
    f.Data.Dictionary.Close("ddInvOrdKey")
'create dataview from above table with the 'xxx' and then need to add these rows to main table
    v.Local.sFilter.Set("[Key2] = 'xxx'")
    f.Data.DataView.Create("dtTotalsL","dvAddrows",22,v.Local.sFilter,"")
    f.Data.DataView.ToDataTable("dtTotalsL","dvAddrows","dtAddRow",True)
    f.Data.DataTable.RemoveColumn("dtAddRow","Key2")
    f.Data.DataTable.Merge("dtAddRow","dtTotals",True,2) 
    f.Data.DataTable.Close("dtAddRow")
'now add the totals from the both lines info tables     
    f.Data.Dictionary.CreateFromDataTable("ddDropVal","dtTotalsL","InvordKey","Matl_D")
       f.Data.Dictionary.SetDefaultReturn("ddDropVal","0.00")    
       f.Data.DataTable.FillFromDictionary("dtTotals","ddDropVal","InvordKey","Matl_D")
    f.Data.Dictionary.Close("ddDropVal")
    f.Data.Dictionary.CreateFromDataTable("ddDropVal","dtTotalsL","InvordKey","Labor_D")
       f.Data.Dictionary.SetDefaultReturn("ddDropVal","0.00")    
       f.Data.DataTable.FillFromDictionary("dtTotals","ddDropVal","InvordKey","Labor_D")
    f.Data.Dictionary.Close("ddDropVal")
    f.Data.Dictionary.CreateFromDataTable("ddDropVal","dtTotalsL","InvordKey","Ovhd_D")
       f.Data.Dictionary.SetDefaultReturn("ddDropVal","0.00")    
       f.Data.DataTable.FillFromDictionary("dtTotals","ddDropVal","InvordKey","Ovhd_D")
    f.Data.Dictionary.Close("ddDropVal")
    f.Data.Dictionary.CreateFromDataTable("ddDropVal","dtTotalsL","InvordKey","Outs_D")
       f.Data.Dictionary.SetDefaultReturn("ddDropVal","0.00")    
       f.Data.DataTable.FillFromDictionary("dtTotals","ddDropVal","InvordKey","Outs_D")
    f.Data.Dictionary.Close("ddDropVal")
    f.Data.Dictionary.CreateFromDataTable("ddDropVal","dtTotalsL","InvordKey","Frgt_D")
       f.Data.Dictionary.SetDefaultReturn("ddDropVal","0.00")    
       f.Data.DataTable.FillFromDictionary("dtTotals","ddDropVal","InvordKey","Frgt_D")
    f.Data.Dictionary.Close("ddDropVal")
    f.Data.Dictionary.CreateFromDataTable("ddDropVal","dtTotalsL","InvordKey","Oth_D")
       f.Data.Dictionary.SetDefaultReturn("ddDropVal","0.00")    
       f.Data.DataTable.FillFromDictionary("dtTotals","ddDropVal","InvordKey","Oth_D")
    f.Data.Dictionary.Close("ddDropVal")

'now add the totals from the lines to the header table
   'Cost
'	F.Data.Dictionary.CreateFromDataTable("dtCost","dtTotals","InvOrdKey","Cost")
'	F.Data.Dictionary.SetDefaultReturn("dtCost",0)
'	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtCost","InvOrdKey","Cost")
'	F.Data.Dictionary.Close("dtCost")	
	'Matl
	F.Data.Dictionary.CreateFromDataTable("dtMatl","dtTotals","InvOrdKey","Matl")
	F.Data.Dictionary.SetDefaultReturn("dtMatl",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtMatl","InvOrdKey","Matl")
	F.Data.Dictionary.Close("dtMatl")	
	'Labor
	F.Data.Dictionary.CreateFromDataTable("dtLabor","dtTotals","InvOrdKey","Labor")
	F.Data.Dictionary.SetDefaultReturn("dtLabor",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtLabor","InvOrdKey","Labor")
	F.Data.Dictionary.Close("dtLabor")	
	'Ovhd
	F.Data.Dictionary.CreateFromDataTable("dtOvhd","dtTotals","InvOrdKey","Ovhd")
	F.Data.Dictionary.SetDefaultReturn("dtOvhd",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtOvhd","InvOrdKey","Ovhd")
	F.Data.Dictionary.Close("dtOvhd")	
	'Outs
	F.Data.Dictionary.CreateFromDataTable("dtOuts","dtTotals","InvOrdKey","Outs")
	F.Data.Dictionary.SetDefaultReturn("dtOuts",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtOuts","InvOrdKey","Outs")
	F.Data.Dictionary.Close("dtOuts")	
	'Frgt
	F.Data.Dictionary.CreateFromDataTable("dtFrgt","dtTotals","InvOrdKey","Frgt")
	F.Data.Dictionary.SetDefaultReturn("dtFrgt",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtFrgt","InvOrdKey","Frgt")
	F.Data.Dictionary.Close("dtFrgt")	
	'Oth
	F.Data.Dictionary.CreateFromDataTable("dtOth","dtTotals","InvOrdKey","Oth")
	F.Data.Dictionary.SetDefaultReturn("dtOth",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtOth","InvOrdKey","Oth")
	F.Data.Dictionary.Close("dtOth")
	F.Data.DataTable.Close("dtTotals") 
	f.Data.DataTable.Close("dtTotalsL")
 
'need to sum up lines table make a dictionary and add it to header table   , Sum((Extension_Order) - (Qty_Shipped*Cost)) As Profit,
    f.Data.DataTable.CreateFromSQL("dtTotals1","con","Select Invoice+Order_no as InvOrdKey,Sum(Extension_Order) As Sales,Sum(Extension_Order) as TaxAmount,Sum(Qty_Shipped) as Qty_Shipped,Sum(qty_Shipped*Cost) as Pre_Total_Cost from V_Order_Hist_Line group by InvOrdKey",TRUE)
    f.Data.DataTable.AddColumn("dtTotals1","Sub_Total_Cost","Float")
    f.Data.Dictionary.CreateFromSQL("ddNegTotal","con","Select Invoice+Order_no as InvOrdKey, Sum(Qty_Shipped*Cost) as Sub_Total_Cost from V_Order_Hist_Line where Line_type = 'D' and UM = 'SF' and Product_line <> 'LA' group by InvOrdKey ")
    f.Data.Dictionary.SetDefaultReturn("ddNegTotal",0)
    f.Data.DataTable.FillFromDictionary("dtTotals1","ddNegTotal","InvOrdKey","Sub_Total_Cost")
    f.Data.Dictionary.Close("ddNegTotal") 
'need to add another dictionary for the product_line = 'CS' type this is a special line that they use that is not normal we have to use the sales
'field as the total_cost field for the product_line
    f.Data.DataTable.AddColumn("dtTotals1","Prod_Line_CS_Cost","Float")
    f.Data.Dictionary.CreateFromSQL("ddCSTotal","con","Select Invoice+Order_no as InvOrdKey, Sum(Extension_Order) as Prod_LIne_CS_Cost from V_Order_Hist_Line where Product_LIne = 'CS'  group by InvOrdKey ")
    f.Data.Dictionary.SetDefaultReturn("ddCSTotal",0)
    f.Data.DataTable.FillFromDictionary("dtTotals1","ddCSTotal","InvOrdKey","Prod_Line_CS_Cost")  
    f.Data.Dictionary.Close("ddCSTotal")
    
    f.Data.DataTable.AddExpressionColumn("dtTotals1","Total_Cost","Float","[Pre_Total_Cost]-[Sub_Total_Cost]+[Prod_Line_CS_Cost]")
    f.Data.DataTable.AddExpressionColumn("dtTotals1","Profit","Float","[Sales]-[Total_Cost]") 
    f.Data.DataTable.AddExpressionColumn("dtTotals1","Margin","Float","IIF(Sales = 0, 0,[Profit]/[Sales])")
 
    'Sales
	F.Data.Dictionary.CreateFromDataTable("dtSales","dtTotals1","InvOrdKey","Sales")
	F.Data.Dictionary.SetDefaultReturn("dtSales",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtSales","InvOrdKey","Sales")
	F.Data.Dictionary.Close("dtSales")	
	'Profit
	F.Data.Dictionary.CreateFromDataTable("dtProfit","dtTotals1","InvOrdKey","Profit")
	F.Data.Dictionary.SetDefaultReturn("dtProfit",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtProfit","InvOrdKey","Profit")
	F.Data.Dictionary.Close("dtProfit")
    'Totalcost
	F.Data.Dictionary.CreateFromDataTable("dtTotalCost","dtTotals1","InvOrdKey","Total_Cost")
	F.Data.Dictionary.SetDefaultReturn("dtTotalCost",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtTotalCost","InvOrdKey","Total_Cost")
	F.Data.Dictionary.Close("dtTotalCost")	
'	'Margin
	F.Data.Dictionary.CreateFromDataTable("dtMargin","dtTotals1","InvOrdKey","Margin")
	F.Data.Dictionary.SetDefaultReturn("dtMargin",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtMargin","InvOrdKey","Margin")
	F.Data.Dictionary.Close("dtMargin")	    
    'TaxAmount
	F.Data.Dictionary.CreateFromDataTable("dtTaxAmount","dtTotals1","InvOrdKey","TaxAmount")
	F.Data.Dictionary.SetDefaultReturn("dtTaxAmount",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtTaxAmount","InvOrdKey","TaxAmount")
	F.Data.Dictionary.Close("dtTaxAmount")	
	'Qty_Shipped
	F.Data.Dictionary.CreateFromDataTable("dtQtyShipped","dtTotals1","InvOrdKey","Qty_Shipped")
	F.Data.Dictionary.SetDefaultReturn("dtQtyShipped",0)
	F.Data.DataTable.FillFromDictionary("dtSalesHist","dtQtyShipped","InvOrdKey","Qty_Shipped")
	F.Data.Dictionary.Close("dtQtyShipped")	
	f.Data.DataTable.Close("dtTotals1")

	'Remove Columns
	F.Data.DataTable.RemoveColumn("dtSalesHist","SalesKey")
    F.Data.DataTable.RemoveColumn("dtSalesHist","TaxKey")
    f.Data.DataTable.RemoveColumn("dtSalesHist","InvOrdKey")
    f.Data.DataTable.RemoveColumn("dtSalesHist","Order_Suffix")
    f.Data.DataTable.RemoveColumn("dtSalesHist$dtSalesHistLine","SalesKey")
    f.Data.DataTable.RemoveColumn("dtSalesHist$dtSalesHistLine","Taxkey")
    f.Data.DataTable.RemoveColumn("dtSalesHist$dtSalesHistLine","OrderLine")
    f.Data.DataTable.RemoveColumn("dtSalesHist$dtSalesHistLine","InvOrdkey")

	F.ODBC.Connection!con.Close

	Gui.frmSalesHist.pgbStatus.Value(75)
	F.Intrinsic.Control.CallSub(LoadGvSalesHist)
	Gui.frmSalesHist.pgbStatus.Value(90)

	Gui.frmSalesHist.pgbStatus.Value(100)
	Gui.frmSalesHist.cmdRefresh.Enabled(True)
	Gui.frmSalesHist.lblStatus.Visible(False)
	Gui.frmSalesHist.pgbStatus.Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadDtSalesHist.End

Program.Sub.LoadGvSalesHist.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	v.Local.fMargin.Declare
	V.Local.fSales.Declare
	V.Local.fProfit.Declare
	v.Local.sRet.Declare

	Gui.frmSalesHist.GsGCSalesHist.AddGridviewFromDatatable("gvSalesHist","dtSalesHist")
    Gui.frmSalesHist.GsGCSalesHist.AddGridviewFromDataview("gvSalesHistLine","dtSalesHist","dvSalesHistLine")
    Gui.frmSalesHist.GsGCSalesHist.SuspendLayout()
	Gui.frmSalesHist.GsGCSalesHist.SetGridviewProperty("gvSalesHist","MultiSelect",True)
	Gui.frmSalesHist.GsGCSalesHist.SetGridviewProperty("gvSalesHist","AllowSort",True)
	Gui.frmSalesHist.GsGCSalesHist.SetGridviewProperty("gvSalesHist","AllowFilter",True)
	Gui.frmSalesHist.GsGCSalesHist.setGridViewProperty("gvSalesHist","OptionsDetailShowDetailTabs",False)
	Gui.frmSalesHist.GsGCSalesHist.SetGridviewProperty("gvSalesHist","OptionsViewShowGroupPanel",True)
	Gui.frmSalesHist.GsGCSalesHist.SetGridViewProperty("gvSalesHist","EnableAppearanceOddRow",True)
	Gui.frmSalesHist.GsGCSalesHist.SetGridViewProperty("gvSalesHist","AllowColumnResizing",True)
	Gui.frmSalesHist.GsGCSalesHist.SetGridViewProperty("gvSalesHist","OptionsViewColumnAutoWidth",False)

	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Cost","Visible",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Price","Visible",False)	

    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Area","Visible",False)	
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Display_Part","Visible",False)  
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Ship_Via","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Branch","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","TrackingNo","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Customer_PO","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Name_Cust_Ship","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Customer_Ship","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Customer","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Invoice","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Order_No","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Order_Suffix","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Tax_1","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","TaxStatus","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Descr","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Date_Invoice","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Matl_L","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Matl_D","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Frgt_L","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Frgt_D","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Labor_L","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Labor_D","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Outs_L","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Outs_D","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Ovhd_L","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Ovhd_D","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Oth_L","Visible",False) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Oth_D","Visible",False) 
    
   	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Qty_Shipped","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Total_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Price","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Sales","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Profit","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Margin","DisplayCustomNumeric","##0.00%")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Tax_Rate_1","DisplayCustomNumeric","##0.00%")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","TaxAmount","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Tax","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Matl","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Labor","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Ovhd","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Outs","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Frgt","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Oth","DisplayCustomNumeric","#,###,###,##0.00")
	
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Customer","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Invoice","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Order_No","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Customer_PO","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Date_Invoice","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Qty_Shipped","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Cost","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Total_Cost","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Price","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Sales","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Profit","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Margin","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Tax_1","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Descr","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","TaxStatus","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Tax_Rate_1","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","TaxAmount","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Tax","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Branch","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Ship_Via","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Matl","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Labor","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Ovhd","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Outs","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Frgt","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Oth","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","TrackingNo","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Part","HeaderFontBold",True)
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Location","HeaderFontBold",True)
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Product_Line","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Description","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Order_Line","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","UM","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Line_Type","HeaderFontBold",True)	
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Job","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHistLine","Status","HeaderFontBold",True)

    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer","Caption","Cust No")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer","Caption","Customer")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer_Ship","Caption","Ship To")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Invoice","Caption","Invoice")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Order_No","Caption","Sales Order No")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer_PO","Caption","Customer PO")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Date_Invoice","Caption","Invoice Date")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Qty_Shipped","Caption","Qty Shipped")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Cost","Caption","Cost")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Total_Cost","Caption","Total Cost")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Price","Caption","Price")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Sales","Caption","Sales")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Profit","Caption","Profit")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Margin","Caption","Margin")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_State","Caption","Zone")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_1","Caption","Code")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Descr","Caption","Code Description")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxStatus","Caption","Tax Exempt")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_Rate_1","Caption","Tax Rate")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxAmount","Caption","Tax Amount")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax","Caption","Tax")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Salesman","Caption","SalesPerson")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Branch","Caption","Branch")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ship_Via","Caption","Ship Via")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Matl","Caption","Material")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Labor","Caption","Labor")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ovhd","Caption","Overhead")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Outs","Caption","Outside")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Frgt","Caption","Freight")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Oth","Caption","Other")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TrackingNo","Caption","Tracking No")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CSRV","Caption","Carrier")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_SHORT_DESC","Caption","Carrier short")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_LONG_DESC","Caption","Carrier long")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","AlphaSort","Caption","Alpha Sort")

    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer_Ship","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Invoice","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Order_No","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer_PO","AllowEdit",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Date_Invoice","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Qty_Shipped","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Cost","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Total_Cost","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Price","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Sales","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Profit","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Margin","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_State","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_1","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Descr","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxStatus","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_Rate_1","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxAmount","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Salesman","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Branch","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ship_Via","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Matl","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Labor","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ovhd","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Outs","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Frgt","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Oth","AllowEdit",False)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TrackingNo","AllowEdit",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","AlphaSort","AllowEdit",True)

	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer_PO","ReadOnly",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TrackingNo","ReadOnly",True)
    
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer","MinWidth","65")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer","MinWidth","150")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer_Ship","MinWidth","150")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Invoice","MinWidth","60")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Order_No","MinWidth","80")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer_PO","MinWidth","105")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Date_Invoice","MinWidth","80")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Qty_Shipped","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Cost","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Total_Cost","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Price","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Sales","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Profit","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Margin","MinWidth","75")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_State","MinWidth","45")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_1","MinWidth","45")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Descr","MinWidth","130")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxStatus","MinWidth","65")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxAmount","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_Rate_1","MinWidth","80")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Salesman","MinWidth","100")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Branch","MinWidth","70")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ship_Via","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Matl","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Labor","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ovhd","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Outs","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Frgt","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Oth","MinWidth","95")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TrackingNo","MinWidth","130")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CSRV","MinWidth","80")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_SHORT_DESC","MinWidth","100")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_LONG_DESC","MinWidth","120")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","AlphaSort","MinWidth","120")

    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer_Ship","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Invoice","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Order_No","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer_PO","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Date_Invoice","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Qty_Shipped","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Cost","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Total_Cost","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Price","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Sales","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Profit","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Margin","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_State","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_1","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Descr","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxStatus","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_Rate_1","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxAmount","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Salesman","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Branch","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ship_Via","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Matl","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Labor","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ovhd","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Outs","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Frgt","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Oth","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TrackingNo","HeaderFontBold",True)
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CSRV","HeaderFontBold",True)
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_SHORT_DESC","HeaderFontBold",True)
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_LONG_DESC","HeaderFontBold",True) 
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","AlphaSort","HeaderFontBold",True)

    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer_Ship","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Invoice","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Order_No","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer_PO","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Date_Invoice","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Qty_Shipped","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Cost","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Total_Cost","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Sales","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Price","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Profit","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Margin","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_State","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_1","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Descr","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxStatus","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_Rate_1","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxAmount","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Salesman","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Branch","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ship_Via","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Matl","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Labor","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ovhd","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Outs","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Frgt","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Oth","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TrackingNo","HeaderHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CSRV","HeaderHAlignment","Center")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_SHORT_DESC","HeaderHAlignment","Center")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","CARR_LONG_DESC","HeaderHAlignment","Center")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","AlphaSort","HeaderHAlignment","Center")

	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Customer","CellHAlignment","Center")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer","CellHAlignment","Left")
    Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Name_Customer_Ship","CellHAlignment","Left")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Invoice","CellHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Order_No","CellHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Date_Invoice","CellHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_State","CellHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_1","CellHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxStatus","CellHAlignment","Center")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Margin","CellForeColor","Blue")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Date_Invoice","DisplayCustomDateTime","d")

	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Qty_Shipped","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Total_Cost","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Price","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Sales","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Profit","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Margin","DisplayCustomNumeric","##0.00%")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax_Rate_1","DisplayCustomNumeric","##0.00%")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","TaxAmount","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Tax","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Matl","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Labor","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Ovhd","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Outs","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Frgt","DisplayCustomNumeric","#,###,###,##0.00")
	Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","Oth","DisplayCustomNumeric","#,###,###,##0.00")

	Gui.frmSalesHist.GsGCSalesHist.AddSummaryItem("gvSalesHist","Qty_Shipped","Qty_Shipped","Sum","","","n")
	Gui.frmSalesHist.GsGCSalesHist.AddSummaryItem("gvSalesHist","Total_Cost","Total_Cost","Sum","","","n")
	Gui.frmSalesHist.GsGCSalesHist.AddSummaryItem("gvSalesHist","Sales","Sales","Sum","","","n")
	Gui.frmSalesHist.GsGCSalesHist.AddSummaryItem("gvSalesHist","Profit","Profit","Sum","","","n")
'need to take the profit / sales 

    f.Data.DataTable.Compute("dtSalesHist","Sum(Sales)",,v.Local.fSales)
	f.Data.DataTable.Compute("dtSalesHist","Sum(Profit)",,v.Local.fProfit)
	f.Intrinsic.Control.If(v.Local.fSales,=,0.0, "OR", v.local.fProfit,=,0.0)
	   v.Local.fMargin.Set(0.0)
	f.Intrinsic.Control.Else
	   F.Intrinsic.Math.Div(V.Local.fProfit,V.Local.fSales,V.Local.fMargin)
	f.Intrinsic.Control.EndIf
 '	F.Intrinsic.Math.Div(V.Local.fProfit,V.Local.fSales,V.Local.fMargin)
 	f.Intrinsic.Math.Mult(v.Local.fMargin,100.00,v.Local.fMargin)
 	f.Intrinsic.String.Format(v.Local.fMargin,"##0.00",v.Local.fMargin)
 	f.Intrinsic.String.Build("{0}{1}", v.Local.fMargin,"%",v.Local.sRet) 	
    Gui.frmSalesHist.GsGCSalesHist.AddSummaryItem("gvSalesHist","Margin","Margin","Sum",v.Local.sRet,"",",")

	F.Intrinsic.Control.If(V.Global.bLongPart)
		Gui.frmSalesHist.GsGCSalesHist.SetColumnProperty("gvSalesHist","DISPLAY_PART","MinWidth","250")
	F.Intrinsic.Control.EndIf

	Gui.frmSalesHist.GsGCSalesHist.ResumeLayout()
	Gui.frmSalesHist.GsGCSalesHist.MainView("gvSalesHist")

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.LoadGvSalesHist.End

Program.Sub.GsGCSalesHist_RowCellClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.local.sTitle.Declare
	V.Local.fProfit.Declare
	V.Local.sCustomer.Declare
	V.Local.sPart.Declare
	V.Local.sInvoice.Declare
	V.Local.sSeries.Declare
	V.Local.fCost.Declare
	V.Local.sTemp.Declare

	Gui.frmSalesHist.GsGCSalesHist.GetCellValueByColumnName("gvSalesHist","INVOICE",V.Args.RowIndex,V.Local.sInvoice)

	F.Intrinsic.Control.SelectCase(V.Args.Column)
	  f.Intrinsic.Control.Case("Margin")	
' this is not going to work since we don't have the part on the main grid	  
		Gui.frmSalesHist.GsGCSalesHist.GetCellValueByColumnName("gvSalesHist","Profit",V.Args.RowIndex,V.Local.fProfit)
		Gui.frmSalesHist.GsGCSalesHist.GetCellValueByColumnName("gvSalesHist","Cost",V.Args.RowIndex,V.Local.fCost)
		Gui.frmSalesHist.GsGCSalesHist.GetCellValueByColumnName("gvSalesHist","Name_Customer_Ship",V.Args.RowIndex,V.Local.sCustomer)
		Gui.frmSalesHist.GsGCSalesHist.GetCellValueByColumnName("gvSalesHist","INVOICE",V.Args.RowIndex,V.Local.sInvoice)
'		Gui.frmSalesHist.GsGCSalesHist.GetCellValueByColumnName("gvSalesHist","Part",V.Args.RowIndex,V.Local.sPart)

'		F.Intrinsic.String.Build("Customer: {0}{3}Invoice: {1}{3}Part: {2}",V.Local.sCustomer.RTrim,V.Local.sInvoice.RTrim,V.Local.sPart.RTrim,V.Ambient.NewLine,V.Local.sTitle)
		F.Intrinsic.String.Build("Total Cost*!*Profit!*!{0}*!*{1}",V.Local.fCost,V.local.fProfit,V.Local.sSeries)
		Gui.frmProfit.GsChartProfit.ClearChart
		Gui.frmProfit.GsChartProfit.CreatePieChart(V.Local.sTitle,"Margin",V.Local.sSeries)
		Gui.frmProfit.GsChartProfit.SetChartProperty("LEGEND","","Visible",-1,False)

		Gui.frmProfit..Visible(False)
		Gui.frmProfit..Show
	f.Intrinsic.Control.Case("ORDER_NO")	 
	    Gui.frmSalesHist.GsGCSalesHist.GetCellValueByColumnName("gvSalesHist","ORDER_NO",v.Args.RowIndex,v.Local.sTemp)
	    f.Intrinsic.String.Concat(v.Local.sTemp,"AMD!*!V!*!*!*ZDR*!*",v.Local.sTemp)
		f.Global.General.CallWrapperSync(7070,v.Local.sTemp)
	F.Intrinsic.Control.CaseAny("Invoice","INVOICE")
			F.Global.General.CallWrapperAsync(200700,V.Local.sInvoice)	
	F.Intrinsic.Control.EndSelect	

	f.Intrinsic.Control.ExitSub

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.GsGCSalesHist_RowCellClick.End

Program.Sub.frmProfit_UnLoad.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmProfit..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmProfit_UnLoad.End

Program.Sub.Serialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	V.Local.sSerialize.Declare
	v.Local.sSQL.Declare	
	v.Local.sUserID.Declare

	F.Global.Security.GetUserID(v.Caller.User,v.Caller.CompanyCode,v.Local.sUserID)
'Delete old registry records
	F.ODBC.Connection!common.OpenConnection(V.Ambient.Ccon,V.Ambient.Cuser,V.Ambient.Cpass)		
	f.Intrinsic.String.Build("Delete From Gs_Registry Where User_ID = '{0}' and Company = '{1}' and Reg_ID = '5330' and Seq = '1001';",v.Local.sUserID,v.Caller.CompanyCode,v.Local.sSQL)
	F.ODBC.Connection!common.Execute(v.Local.sSQL)
	F.ODBC.Connection!common.Close
'gvSalesHist
	Gui.frmSalesHist.GsGCSalesHist.Serialize("gvSalesHist",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvSalesHist",5330,1001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)
'gvSalesHistLine    
    Gui.frmSalesHist.GsGCSalesHist.Serialize("gvSalesHistline",V.Local.sSerialize)
	F.Global.Registry.AddValue(V.Caller.User,V.Caller.CompanyCode,"gvSalesHistline",5330,1001,False,"Serialize",False,0,-999.0,1/1/1980,12:00:00 AM,V.Local.sSerialize)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.Serialize.End

Program.Sub.Deserialize.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare
	V.Local.sSerialize.Declare

'gvSalesHist
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvSalesHist",5330,1001,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmSalesHist.GsGCSalesHist.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf
'gvSalesHistLine
	F.Global.Registry.ReadValue(V.Caller.User,V.Caller.CompanyCode,"gvSalesHistLine",5330,1001,6,"",V.Local.sSerialize)
	F.Intrinsic.Control.If(V.Local.sSerialize.Trim,<>,"")
		Gui.frmSalesHist.GsGCSalesHist.Deserialize(V.Local.sSerialize)
	F.Intrinsic.Control.EndIf

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End

	F.Intrinsic.Control.EndTry
Program.Sub.Deserialize.End

Program.Sub.picGSS_DblClick.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmWeb..Show

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.picGSS_DblClick.End

Program.Sub.cmdGSS_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Task.ShellExec(0,"Open","http://www.globalshopsolutions.com/","","",0)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdGSS_Click.End

Program.Sub.cmdServ_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-service.com/","","",0)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdServ_Click.End

Program.Sub.cmdUpd_Click.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	F.Intrinsic.Task.ShellExec(0,"Open","http://gss-updates.com/","","",0)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.cmdUpd_Click.End

Program.Sub.frmWeb_Unload.Start
	F.Intrinsic.Control.Try
	V.Local.sError.Declare

	Gui.frmWeb..Visible(False)

	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry
Program.Sub.frmWeb_Unload.End

Program.Sub.GsGCSalesHist_ColumnFilterChanged.Start
    F.Intrinsic.Control.Try
	V.Local.sError.Declare
	
    v.Local.fSales.Declare
    v.Local.fProfit.Declare
    v.Local.fMargin.Declare
    v.Local.sRet.Declare	 	   
	  	f.Data.DataTable.Compute("dtSalesHist","Sum(Sales)",v.Args.ActiveFilterExpression,v.Local.fSales)
		f.Data.DataTable.Compute("dtSalesHist","Sum(Profit)",v.Args.ActiveFilterExpression,v.Local.fProfit)
		f.Intrinsic.Control.If(v.Local.fSales,=,0.0, "OR", v.local.fProfit,=,0.0)
		   v.Local.fMargin.Set(0.0)
		f.Intrinsic.Control.Else
		   F.Intrinsic.Math.Div(V.Local.fProfit,V.Local.fSales,V.Local.fMargin)
		f.Intrinsic.Control.EndIf
	' 	F.Intrinsic.Math.Div(V.Local.fProfit,V.Local.fSales,V.Local.fMargin)
	 	f.Intrinsic.Math.Mult(v.Local.fMargin,100.00,v.Local.fMargin)
	 	f.Intrinsic.String.Format(v.Local.fMargin,"##0.00",v.Local.fMargin)
	 	f.Intrinsic.String.Build("{0}{1}", v.Local.fMargin,"%",v.Local.sRet)
	    Gui.frmSalesHist.GsGCSalesHist.AddSummaryItem("gvSalesHist","Margin","Margin","Sum",v.Local.sRet,"",",")	   	
	F.Intrinsic.Control.Catch
		F.Intrinsic.String.Build("Project: {0}{1}{1}Subroutine: {2}{1}Error Occurred {3} with description {4}{1}{1}GAB Version: {5}",V.Ambient.ScriptPath,V.Ambient.Newline,V.Ambient.CurrentSubroutine,V.Ambient.ErrorNumber,V.Ambient.ErrorDescription,V.Ambient.GABVersion,V.Local.sError)
		F.Intrinsic.UI.Msgbox(V.Local.sError)
		F.Intrinsic.Control.End 
	F.Intrinsic.Control.EndTry   

Program.Sub.GsGCSalesHist_ColumnFilterChanged.End

Program.Sub.Comments.Start
${$0$}$$}$$}$12:00:00 AM$}$False
${$3$}$0$}$$}$0$}$-1$}$$}$12:00:00 AM$}$'
Program.Sub.Comments.End
